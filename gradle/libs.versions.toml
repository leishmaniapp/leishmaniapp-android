[versions]
agp = "8.4.1"
core-ktx = "1.13.1"
kotlin = "2.0.0"
ksp = "2.0.0-1.0.21"

junit = "4.13.2"
junit-ktx = "1.1.5"
protobuf = "0.9.4"
dagger-hilt = "2.51.1"

jetpack-hilt = "1.2.0"
jetpack-lifecycle = "2.8.1"
jetpack-compose = "1.6.7"
jetpack-compose-material3 = "1.2.1"
jetpack-navigation = "2.7.7"
jetpack-startup = "1.1.1"
jetpack-camerax = "1.3.3"
jetpack-room = "2.6.1"

arrow-core = "1.2.4"
arrow-fx-coroutines = "1.2.0"
coil = "2.4.0"
faker = "2.0.2"
itextpdf = "8.0.1"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
google-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
google-protobuf = { id = "com.google.protobuf", version.ref = "protobuf" }
google-dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "dagger-hilt" }

[libraries]

# Android
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version = "1.7.0" }

# Kotlin Extensions
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# JUnit
junit = { module = "junit:junit", version.ref = "junit" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "junit-ktx" }
androidx-junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "junit-ktx" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }

# Kotlinx
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.6.3" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.0" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.8.1" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version = "1.8.1" }

# Jetpack Hilt
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger-hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger-hilt" }
androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "jetpack-hilt" }

# Jetpack Compose
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "jetpack-compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "jetpack-compose" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "jetpack-compose" }
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "jetpack-compose" }

# Jetpack Compose (Material3)
material-compose = { module = "androidx.compose.material3:material3", version.ref = "jetpack-compose-material3" }
material-icons-core = { module = "androidx.compose.material:material-icons-core" }
material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }

# Jetpack Navigation
androidx-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "jetpack-navigation" }
androidx-navigation-hilt = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "jetpack-hilt" }

# Jetpack Startup
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "jetpack-startup" }

# Jetpack Lifecycle
androidx-lifecycle-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "jetpack-lifecycle" }

# Jetpack ViewModel
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "jetpack-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "jetpack-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "jetpack-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "jetpack-lifecycle" }

# Jetpack Livedata
androidx-lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "jetpack-lifecycle" }
androidx-compose-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "jetpack-compose" }

# Jetpack CameraX
androidx-camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "jetpack-camerax" }
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "jetpack-camerax" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "jetpack-camerax" }

# Jetpack Room
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "jetpack-room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "jetpack-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "jetpack-room" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "jetpack-room" }

# Jetpack WorkManager
androidx-work = { module = "androidx.work:work-runtime-ktx" }
androidx-work-hilt = { module = "androidx.hilt:hilt-work", version.ref = "jetpack-hilt" }

# Functional Programming
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow-core" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow-fx-coroutines" }

# Other Libraries
faker = { module = "io.bloco:faker", version.ref = "faker" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
itextpdf-itext7 = { module = "com.itextpdf:itext7-core", version.ref = "itextpdf" }

[bundles]
kotlinx = [
    "kotlinx-serialization-json",
    "kotlinx-datetime",
    "kotlinx-coroutines-core",
    "kotlinx-coroutines-android",
]

jetpack-compose = [
    "androidx-compose-ui",
    "androidx-compose-runtime",
    "androidx-compose-foundation",
    "androidx-compose-animation",
]

material = [
    "material-compose",
    "material-icons-core",
    "material-icons-extended",
]

jetpack-navigation = [
    "androidx-navigation",
    "androidx-navigation-hilt",
]

jetpack-lifecycle = [
    "androidx-lifecycle-ktx",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-viewmodel-savedstate",
    "androidx-lifecycle-livedata-ktx",
    "androidx-compose-livedata",
]

jetpack-camerax = [
    "androidx-camera-camera2",
    "androidx-camera-lifecycle",
    "androidx-camera-view",
]

jetpack-room = [
    "androidx-room-runtime",
    "androidx-room-ktx"
]

jetpack-work = [
    "androidx-work",
    "androidx-work-hilt",
]